<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>alpine on blog-ja.dtan4.net</title><link>http://blog-ja.dtan4.net/tags/alpine/</link><description>Recent content in alpine on blog-ja.dtan4.net</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><copyright>Copyright &amp;copy; 2020 dtan4 All Rights Reserved</copyright><lastBuildDate>Thu, 14 Apr 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://blog-ja.dtan4.net/tags/alpine/index.xml" rel="self" type="application/rss+xml"/><item><title>Ubuntu や Alpine Linux をワンコマンドで瞬時に立ち上げる</title><link>http://blog-ja.dtan4.net/posts/qiita-3be396665f9305428f4f/</link><pubDate>Thu, 14 Apr 2016 00:00:00 +0000</pubDate><guid>http://blog-ja.dtan4.net/posts/qiita-3be396665f9305428f4f/</guid><description>この記事はQiitaの記事をエクスポートしたものです。内容が古くなっている可能性があります。
alpine コマンド、centos コマンド、ubuntu コマンド Docker 環境を用意して以下のエイリアスを .bashrc なり .zshrc に書いておくと、ワンコマンドで Linux の対話環境が立ち上がって便利
alias alpine=&amp;#39;docker run -it --rm alpine:3.3 /bin/sh&amp;#39; alias centos=&amp;#39;docker run -it --rm centos:7 /bin/bash&amp;#39; alias ubuntu=&amp;#39;docker run -it --rm ubuntu:14.04 /bin/bash&amp;#39; $ alpine / # apk update fetch http://dl-cdn.alpinelinux.org/alpine/v3.3/main/x86_64/APKINDEX.tar.gz fetch http://dl-cdn.alpinelinux.org/alpine/v3.3/community/x86_64/APKINDEX.tar.gz v3.3.3-20-gb700737 [http://dl-cdn.alpinelinux.org/alpine/v3.3/main] v3.3.3-9-gfc38db2 [http://dl-cdn.alpinelinux.org/alpine/v3.3/community] OK: 5858 distinct packages available $ centos [root@dfaaba07c44b /]# yum update Loaded plugins: fastestmirror, ovl base | 3.6 kB 00:00:00 extras | 3.</description></item><item><title>Alpine Linux でタイムゾーンを変更する</title><link>http://blog-ja.dtan4.net/posts/qiita-8359e389b95cbc60952d/</link><pubDate>Sat, 06 Feb 2016 00:00:00 +0000</pubDate><guid>http://blog-ja.dtan4.net/posts/qiita-8359e389b95cbc60952d/</guid><description>この記事はQiitaの記事をエクスポートしたものです。内容が古くなっている可能性があります。
スリムな Docker イメージを作るため、gliderlabs/alpine イメージをベースにバイナリを一個だけポンと置いて運用するみたいなことをしています。 gliderlabs/alpine イメージは（というかほとんどの OS イメージは）タイムゾーンが GMT (UTC+0) のままなので、時刻依存の作業をさせるときには気をつけないといけません。日本時間 (UTC+9) の感覚で書いたら、9時間遅れて実行されたとかログの時刻がずれるとか起こりえます。
まっさらの状態で date を打つと…
$ docker run --rm gliderlabs/alpine:3.3 date Sat Feb 6 06:47:37 UTC 2016 タイムゾーンの設定 メジャーな Linux ディストリビューションと同じく、/etc/localtime を変更すればよいです。zoneinfo とかはそのままだと用意されていないので、apk で tzdata パッケージをインストールする必要があります。
Dockerfile で日本標準時 Asia/Tokyo に設定する場合は以下のようになります。ここで欲しいのは /usr/share/zoneinfo/Asia/Tokyo だけなので、tzdata はそれだけ抜き取ったら消しちゃいます。
FROMgliderlabs/alpine:3.3RUN apk --update add tzdata &amp;amp;&amp;amp; \ cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime &amp;amp;&amp;amp; \ apk del tzdata &amp;amp;&amp;amp; \ rm -rf /var/cache/apk/*この Dockerfile からビルドしたイメージで date を叩くと…</description></item></channel></rss>