<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Peco on blog-ja.dtan4.net</title><link>https://dtan4.github.io/blog-ja/tags/peco/</link><description>Recent content in Peco on blog-ja.dtan4.net</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><copyright>Copyright &amp;copy; 2020 dtan4 All Rights Reserved</copyright><lastBuildDate>Mon, 28 Sep 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://dtan4.github.io/blog-ja/tags/peco/index.xml" rel="self" type="application/rss+xml"/><item><title>awscli + jq + peco + tmux-cssh を使って複数 EC2 インスタンスへ簡単 SSH</title><link>https://dtan4.github.io/blog-ja/posts/qiita-88545bbd2dcdb590b5a7/</link><pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate><guid>https://dtan4.github.io/blog-ja/posts/qiita-88545bbd2dcdb590b5a7/</guid><description>この記事はQiitaの記事をエクスポートしたものです。内容が古くなっている可能性があります。
TL;DR 必要なもの (awscli, jq, peco, tmux, tmux-cssh) をすべて入れた状態で
$ sh -c &amp;#34;tmux-cssh -i &amp;lt;ssh_key&amp;gt; -u &amp;lt;ssh_user&amp;gt; $(aws ec2 describe-instances | jq -r &amp;#39;.Reservations[] | .Instances[] | select(.State.Name != &amp;#34;terminated&amp;#34;) | select(has(&amp;#34;PublicIpAddress&amp;#34;)) | [.PublicIpAddress,.PrivateIpAddress,.State.Name,(.Tags[] | select(.Key == &amp;#34;Name&amp;#34;) | .Value // &amp;#34;&amp;#34;)] | join(&amp;#34;\t&amp;#34;)&amp;#39; | peco | awk &amp;#39;{ print $1 }&amp;#39; | tr &amp;#39;\n&amp;#39; &amp;#39; &amp;#39;)&amp;#34; とすることで、peco で EC2 インスタンスを選んで同時に SSH アクセスすることができます。
:warning: tmux 上で生活している方は、一度 tmux detach して tmux の外に出ないと tmux-cssh が実行できません。 また、ターミナル起動時に自動で tmux を立ち上げる設定は無効化しておく必要があります。</description></item><item><title>peco で Docker の container ID を楽に選択する alias</title><link>https://dtan4.github.io/blog-ja/posts/qiita-839c85d2650e63f662b0/</link><pubDate>Mon, 20 Oct 2014 00:00:00 +0000</pubDate><guid>https://dtan4.github.io/blog-ja/posts/qiita-839c85d2650e63f662b0/</guid><description>この記事はQiitaの記事をエクスポートしたものです。内容が古くなっている可能性があります。
Docker 使っていると割りと container ID が必要になるケース多いと思います。 このとき一々 docker ps から container ID を探し出してコピペするのが面倒だったので、alias を定義しました。
alias -g P=&amp;#39;`docker ps | tail -n +2 | peco | cut -d&amp;#34; &amp;#34; -f1`&amp;#39; docker ps の結果を peco で絞り込みます。 これだと起動しているコンテナの ID しか取れないので、停止中のも取りたい場合は -a オプションを付ければよいです。
peco に渡す前に tail -n +2 を噛ませていますが、これは「頭から2行目以降を出力する（= 先頭行を飛ばして出力する）」というコマンドです。 docker ps は先頭行にフィールド名ヘッダが入るので、これを除去しています。
コンテナ停止 $ docker stop P コンテナのログを見る $ docker logs P nsenter を使ってコンテナに入る 予め nsenter を使えるようにしておき、.bashrc や .zshrc で docker-enter コマンドを定義しておく。
$ docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter OS X で boot2docker 経由の docker-enter を参考までに載せておきます。</description></item><item><title>peco で git のコミットハッシュを選択する alias</title><link>https://dtan4.github.io/blog-ja/posts/qiita-94ea5bd2f9475c72b9e9/</link><pubDate>Tue, 08 Jul 2014 00:00:00 +0000</pubDate><guid>https://dtan4.github.io/blog-ja/posts/qiita-94ea5bd2f9475c72b9e9/</guid><description>この記事はQiitaの記事をエクスポートしたものです。内容が古くなっている可能性があります。
いちいち git log からコミットハッシュを探しだすのが面倒なので、alias を定義してみました。
alias -g C=&amp;#39;`git log --oneline | peco | cut -d&amp;#34; &amp;#34; -f1`&amp;#39; 例えば、git show C では peco で選択したコミットの中身をみることができます。 git reset --hard C では選択したコミットまでロールバックできます。
また、reflog から選択する alias も定義しました。
alias -g R=&amp;#39;`git reflog | peco | cut -d&amp;#34; &amp;#34; -f1`&amp;#39; git reset --hard R では peco で選択した時点まで操作履歴をロールバックできます。
See also: dot.zsh/.zshrc.peco - dtan4/dot.zsh</description></item></channel></rss>