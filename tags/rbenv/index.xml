<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rbenv on blog-ja.dtan4.net</title><link>http://blog-ja.dtan4.net/tags/rbenv/</link><description>Recent content in rbenv on blog-ja.dtan4.net</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><copyright>Copyright &amp;copy; 2020 dtan4 All Rights Reserved</copyright><lastBuildDate>Tue, 28 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://blog-ja.dtan4.net/tags/rbenv/index.xml" rel="self" type="application/rss+xml"/><item><title>手元の全 Ruby バージョンから特定の gem を一掃する</title><link>http://blog-ja.dtan4.net/posts/qiita-215f688a86d22c30362e/</link><pubDate>Tue, 28 Mar 2017 00:00:00 +0000</pubDate><guid>http://blog-ja.dtan4.net/posts/qiita-215f688a86d22c30362e/</guid><description>この記事はQiitaの記事をエクスポートしたものです。内容が古くなっている可能性があります。
(2017/03/29 10:50 追記)
rbenv でインストールしたバージョン全てに対してコマンドを実行する rbenv-each というプラグインがあったので、以下のコマンドでやりたいことが実現できました。
$ rbenv each gem uninstall -x gemname rbenv-each は @sakuro さんにコメントでご教示いただきました。ありがとうございました。
$ export GEM_NAME=gemname $ for v in `rbenv whence $GEM_NAME`; do rbenv shell $v; gem uninstall -x $GEM_NAME; rbenv shell --unset; done 昔 Ruby で作ったコマンドラインツールを Go で書き換えた、けど rbenv のパスが PATH の先頭寄りに書かれていて優先されてしまう（下の例）…というときに便利です。nodenv や plenv でも、適切なコマンドに入れ替えれば応用できそう。
$ gemname rbenv: gemname: command not found The `gemname' command exists in these Ruby versions: 2.3.0 2.</description></item></channel></rss>